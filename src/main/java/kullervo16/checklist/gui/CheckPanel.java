/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kullervo16.checklist.gui;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import kullervo16.checklist.model.State;

/**
 * Gui for a single check.
 * 
 * @author jeve
 */
public class CheckPanel extends javax.swing.JPanel {

    private final String check;
    private final PropertyChangeListener updateListener;
    private State oldState = State.UNKNOWN;
    /**
     * Creates new form CheckPanel
     */
    public CheckPanel(String check, PropertyChangeListener updateListener) {
        this.check = check;
        this.updateListener = updateListener;
        initComponents();
    }

    public State getState() {
        if(this.okButton.isSelected()) {
            return State.OK;
        } else if (this.nokButton.isSelected()) {
            return State.NOK;
        } else if (this.notApplicableButton.isSelected()) {
            return State.NOT_APPLICABLE;
        } else if (this.onHoldButton.isSelected()) {
            return State.ON_HOLD;
        }
        return State.UNKNOWN;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        okButton = new javax.swing.JRadioButton();
        nokButton = new javax.swing.JRadioButton();
        onHoldButton = new javax.swing.JRadioButton();
        notApplicableButton = new javax.swing.JRadioButton();

        setPreferredSize(new java.awt.Dimension(400, 80));

        jLabel1.setText(this.check);

        buttonGroup.add(okButton);
        okButton.setText("OK");
        okButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                buttonStateChanged(evt);
            }
        });

        buttonGroup.add(nokButton);
        nokButton.setText("NOK");
        nokButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                buttonStateChanged(evt);
            }
        });

        buttonGroup.add(onHoldButton);
        onHoldButton.setText("on hold");
        onHoldButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                buttonStateChanged(evt);
            }
        });

        buttonGroup.add(notApplicableButton);
        notApplicableButton.setText("not applicable");
        notApplicableButton.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                buttonStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(notApplicableButton)
                        .addGap(54, 54, 54)
                        .addComponent(okButton)
                        .addGap(55, 55, 55)
                        .addComponent(onHoldButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(nokButton))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(nokButton)
                    .addComponent(onHoldButton)
                    .addComponent(notApplicableButton))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_buttonStateChanged
        this.updateListener.propertyChange(new PropertyChangeEvent(this, "state", this.oldState, this.getState()));
        this.oldState = this.getState();
    }//GEN-LAST:event_buttonStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton nokButton;
    private javax.swing.JRadioButton notApplicableButton;
    private javax.swing.JRadioButton okButton;
    private javax.swing.JRadioButton onHoldButton;
    // End of variables declaration//GEN-END:variables
}
