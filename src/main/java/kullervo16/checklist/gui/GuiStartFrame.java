/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kullervo16.checklist.gui;

import java.util.Collections;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.ListModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import kullervo16.checklist.model.ChecklistRepository;
import kullervo16.checklist.model.TemplateRepository;

/**
 * The main class of the GUI... things start here.
 * 
 * @author jeve
 */
public class GuiStartFrame extends javax.swing.JFrame {

    private final TemplateRepository templates;
    private final ChecklistRepository checklists;
    
    /**
     * Creates new form GuiStartFrame
     */
    public GuiStartFrame(String directory) {
        this.templates = new TemplateRepository();
        this.templates.loadData(directory+"/templates");
        
        this.checklists= new ChecklistRepository();
        this.checklists.loadData(directory+"/checklists");
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        templateList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        checklistList = new javax.swing.JList();
        createNewButton = new javax.swing.JButton();
        continueButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Available templates :");

        templateList.setModel(this.getTemplates()
        );
        templateList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(templateList);
        this.templateList.getSelectionModel().addListSelectionListener(
            new ButtonHandler(this.createNewButton, this.continueButton));

        jLabel2.setText("Available open checklists :");

        checklistList.setModel(this.getOpenChecklists());
        checklistList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(checklistList);
        this.checklistList.getSelectionModel().addListSelectionListener(
            new ButtonHandler(this.continueButton, this.createNewButton));

        createNewButton.setText("Create a new checklist");
        createNewButton.setEnabled(false);
        createNewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createChecklistFromTemplate(evt);
            }
        });

        continueButton.setText("Continue checklist");
        continueButton.setEnabled(false);
        continueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continueOpenChecklist(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createNewButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(continueButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createNewButton)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(continueButton)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createChecklistFromTemplate(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createChecklistFromTemplate
        if(this.templateList.getSelectedIndex() >= 0) {
            System.out.println("Creating a new checklist based on template "+this.templateList.getSelectedValue());
        }
    }//GEN-LAST:event_createChecklistFromTemplate

    private void continueOpenChecklist(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continueOpenChecklist
        if(this.checklistList.getSelectedIndex() >= 0) {
            System.out.println("Continue open checklist "+this.checklistList.getSelectedValue());
            this.setVisible(false);
            ChecklistFrame clf = new ChecklistFrame(this.checklists.getChecklist((String)this.checklistList.getSelectedValue()));
            clf.setVisible(true);
        }
    }//GEN-LAST:event_continueOpenChecklist

    /**
     * @param args the command line arguments
     */
    public static void main(final String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuiStartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuiStartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuiStartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuiStartFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuiStartFrame(args[0]).setVisible(true);
            }
        });
    }
    
    private ListModel getTemplates() {
        DefaultListModel model =  new DefaultListModel();
        List<String> templateNames = this.templates.getTemplateNames();
        Collections.sort(templateNames);
        for(String template : templateNames) {
            model.addElement(template);
        }
        return model;
    }

    private ListModel getOpenChecklists() {
        DefaultListModel model =  new DefaultListModel();
        List<String> checklistNames = this.checklists.getChecklistNames();
        Collections.sort(checklistNames);
        for(String template : checklistNames) {
            model.addElement(template);
        }
        return model;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList checklistList;
    private javax.swing.JButton continueButton;
    private javax.swing.JButton createNewButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList templateList;
    // End of variables declaration//GEN-END:variables

    private static class ButtonHandler implements ListSelectionListener {
        private final JButton buttonToEnable;
        private final JButton buttonToDisable;

        public ButtonHandler(JButton buttonToEnable, JButton buttonToDisable) {
            this.buttonToEnable = buttonToEnable;
            this.buttonToDisable = buttonToDisable;
        }

        @Override
        public void valueChanged(ListSelectionEvent e) {
            this.buttonToEnable.setEnabled(true);
            this.buttonToDisable.setEnabled(false);
        }
    }

    
}
