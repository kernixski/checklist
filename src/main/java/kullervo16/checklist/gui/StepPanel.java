/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kullervo16.checklist.gui;

import java.awt.Color;
import java.text.SimpleDateFormat;
import kullervo16.checklist.model.Step;

/**
 *
 * @author jeve
 */
public class StepPanel extends javax.swing.JPanel {

    private Step step;
    private SimpleDateFormat sdf = new SimpleDateFormat("YYYY/MM/DD HH:mm");
    /**
     * Creates new form StepPanel
     */
    public StepPanel(Step step) {
        this.step = step;
        initComponents();     
        this.updateButton.setVisible(!this.step.isComplete());
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        id = new javax.swing.JLabel();
        action = new javax.swing.JLabel();
        executed = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();

        setBackground(getBackgroundColor());
        setPreferredSize(new java.awt.Dimension(780, 115));

        id.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        id.setText(this.step.getId());

        action.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        action.setText(this.step.getAction());

        executed.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        executed.setText(getExecutedText());

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateStep(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(executed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(action, javax.swing.GroupLayout.PREFERRED_SIZE, 546, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id)
                    .addComponent(action))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(executed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(updateButton)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateStep(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateStep
        
    }//GEN-LAST:event_updateStep


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel action;
    private javax.swing.JLabel executed;
    private javax.swing.JLabel id;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables

    private Color getBackgroundColor() {
        switch(this.step.getState()) {
            case OK:
                return new Color(25, 140, 79);
            case NOK:
                return new Color(209, 31, 31);
            case NOT_APPLICABLE:
                return Color.WHITE;
            case ON_HOLD:
                return new Color(237, 233, 12);
            case UNKNOWN:
            default:
                return new Color(214, 214, 214);
        }
    }

    private String getExecutedText() {
        if(this.step.isComplete()) {
            String dateStr = this.step.getLastUpdate() != null ? " at "+sdf.format(this.step.getLastUpdate()) : "";
            return "Executed by "+this.step.getExecutor()+ dateStr;
        }
        return "";
    }
}
